/// <reference types="node" />
import { ZlibOptions } from 'zlib';
export declare const getSumOfArraysLength: (twoDArray: Buffer[]) => number;
export declare function bufferFrom(items: Buffer[]): Buffer;
export declare const isDebugMode: () => boolean;
export declare const toggleDebugMode: (toggle?: "true" | "false" | undefined) => void;
export declare function onProcessExit(fn: (...args: any[]) => void): void;
export declare function wrapErrorCallback(resolve: () => void, reject: () => void): (err?: Error) => void;
export declare type SerialGunzip = (buffer: Buffer, options?: ZlibOptions) => Promise<Buffer>;
export declare function serialGunzipGenerator(): SerialGunzip;
export declare enum ApiErrorCodes {
    InvalidRequest = "100",
    IOCommunication = "200",
    TooManyActiveSubscriptions = "300",
    SubscribeTooOften = "301",
    GetNextInitialDataTooOften = "304",
    GetNextUpdateDataTooOften = "305",
    UpdateDataResumeTooOften = "400",
    InternalServer = "1000"
}
