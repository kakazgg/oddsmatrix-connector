/// <reference types="node" />
import { Socket } from 'net';
export interface ConnectOptions {
    keepAlive: number;
    timeout: number;
}
export interface TCPConnectorState {
    connected: boolean;
    connecting: boolean;
}
export interface TCPConnectorClass {
    client: Socket | null;
    host: string;
    port: string;
    subscriptionSpecificationName: string;
    subscriptionId: string;
    subscriptionChecksum: string;
    state: TCPConnectorState;
    reconnectAttempt: number;
    connect(sendSubscriptionProbe: boolean, options: ConnectOptions): Promise<void>;
    connectAndBindSocketEvents(options: ConnectOptions): Promise<void>;
    reconnect(): Promise<void>;
    disconnect(): Promise<void>;
    getLastAppliedEntityChangeBatchUuid?: () => string;
}
