import { ErrorResponse, GetNextInitialDataResponse, GetNextUpdateDataResponse, MessageEntity, SubscribeResponse, UnsubscribeResponse } from '../core/messages.types';
export interface HttpConnectionState {
    nextRequestInterval: number;
    subscriptionSpecificationName?: string;
    subscriptionId?: string;
    dumpCompleted?: boolean;
    currentStage: RequestTypes;
}
export declare enum RequestTypes {
    subscribe = "SubscribeRequest",
    nextInitialData = "GetNextInitialDataRequest",
    nextUpdateData = "GetNextUpdateDataRequest",
    unsubscribe = "UnsubscribeRequest"
}
export declare enum HTTPFlowEvents {
    subscriptionIdSet = "subscriptionIdSet",
    dumpCompleted = "dumpCompleted"
}
export declare function isSubscribeResponse(data: MessageEntity): data is SubscribeResponse;
export declare function isUnsubscribeResponse(data: MessageEntity): data is UnsubscribeResponse;
export declare function isInitialData(data: MessageEntity): data is GetNextInitialDataResponse;
export declare function isUpdateData(data: MessageEntity): data is GetNextUpdateDataResponse;
export declare function isError(data: MessageEntity): data is ErrorResponse;
